<div class="site-content uk-container">
  <div class="main-body-public-content " uk-grid>
    <div class="uk-width-2-3@s uk-width-1-2@m main-post">
      <%= render "_main_post.html", conn: @conn, post: Enum.at(@section_1_posts, 0) %>
    </div>

    <div class="uk-width-1-1@s uk-width-1-4@m uk-flex-first@m regular-posts">
      <div class="right-regular-post" uk-grid>
        <div class="uk-width-1-2@s uk-width-1-1@m">
          <%= render "_regular_post.html", conn: @conn, post: Enum.at(@section_2_posts, 0) %>
        </div>
        <div class="uk-width-1-2@s uk-width-1-1@m">
          <%= render "_regular_post.html", conn: @conn, post: Enum.at(@section_2_posts, 1) %>
        </div>
      </div>
    </div>
    

    <div class="uk-width-1-3@s uk-width-1-4@m uk-flex uk-flex-column low-posts">
      <%= for post <- Enum.take(@section_3_posts, 4) do %>
        <%= render "_low_post.html", conn: @conn, post: post %>
      <% end %>
    </div>

    <%= for post <- Enum.take(@section_4_posts, 8) do %>
      <div class="uk-width-1-2@s uk-width-1-4@m">
        <%= render "_regular_post.html", conn: @conn, post: post, abstract: true %>
      </div>
    <% end %>

    <div class="uk-width-1-4@m list-popular">
      <%= render "_popular.html", conn: @conn, site: @site, posts: @popular_posts %>
    </div>
    <div class="uk-width-1-2@m list-latest">
      <%= render "_latest.html", conn: @conn, posts: @latest_posts %>
    </div>
    <div class="uk-width-1-4@m">
      <%= render "_ads.html", conn: @conn, ads: assigns[:ads] %>
      <%= render "_authors.html", conn: @conn,
            columnists_and_posts: @columnists_and_posts%>
    </div>
  </div>
</div>




<script>
const CSRFToken = <%= raw Poison.encode!(Plug.CSRFProtection.get_csrf_token()) %>;
 
const submitButton = document.getElementsByClassName("feedback-submit").item(0);
const feedbackTextField = document.getElementsByClassName("feedback-text").item(0);
const feedbackEmailField = document.getElementsByClassName("feedback-email").item(0);

const handleFeedbackSubmit = csrfToken => event => {
  event.stopPropagation();
  event.preventDefault();

  const feedbackText = feedbackTextField.value;
  const feedbackEmail = feedbackEmailField.value;
  const XHR = new XMLHttpRequest();

  XHR.open("POST", "/feedback");
  XHR.setRequestHeader("X-CSRF-Token", csrfToken);
  XHR.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
  XHR.send("text="+feedbackText+"&email="+feedbackEmail);
};

submitButton.onclick = handleFeedbackSubmit(CSRFToken);
</script>
